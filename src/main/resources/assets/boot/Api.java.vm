package ${controllerPackage};

import cc.wdcloud.base.Resp;
import cc.wdcloud.base.enums.DelEnum;
import cc.wdcloud.common.CommonInfoHolder;
import ${domainPackage}.${domainName};
import ${servicePackage}.${serviceName};
import ${dtoPackage}.${dtoName};
import ${voPackage}.${voName};
import com.github.pagehelper.PageInfo;
import com.google.common.base.Preconditions;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * todo 写下本controller 你的注释
 *
 * @author ${author}
 * @version 1.0.0
 * @createdAt ${createDate}
 * @updatedAt ${createDate}
 */
@Api(tags = "${objName}")
@RestController
@RequestMapping("/${objName}")
public class ${domainName}Controller {

    @Autowired
    private ${serviceName} ${objName}Service;

    /**
     * 条件查询, 分页
     *
     * @param pageNum  页数
     * @param pageSize 条数
     * @param vo       查询条件参数
     * @return cc.wdcloud.base.Resp<com.github.pagehelper.PageInfo<${dtoPackage}.${dtoName}>>
     * @author ${author}
     * @createdAt ${createDate}
     * @updatedAt ${createDate}
     */
    @ApiOperation(value = "条件查询")
    @RequestMapping(value = "/findByCondition", method = {RequestMethod.GET, RequestMethod.POST})
    public Resp<PageInfo<${dtoName}>> findByCondition(@RequestParam(defaultValue = "1") Integer pageNum,
                                                            @RequestParam(defaultValue = "10") Integer pageSize,
                                                            @RequestBody(required = false) ${voName} vo) {
        PageInfo<${dtoName}> pageInfo = ${objName}Service.findList(pageNum, pageSize, CommonInfoHolder.getSaasId(), CommonInfoHolder.getBranchId(), vo);
        return Resp.success(pageInfo);
    }

    /**
     * 保存
     *
     * @param vo 修改参数
     * @return cc.wdcloud.base.Resp<java.lang.Long> 操作数据的ID
     * @author ${author}
     * @createdAt ${createDate}
     * @updatedAt ${createDate}
     */
    @ApiOperation(value = "保存和更新")
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public Resp<Long> save(@RequestBody ${voName} vo) {
        Long ${objName}Id = vo.getId();
        Long userId = CommonInfoHolder.getUserId();
        if (null == ${objName}Id) {
            ${objName}Id = ${objName}Service.save(vo, CommonInfoHolder.getSaasId(), CommonInfoHolder.getBranchId(), userId);
        } else {
            ${objName}Service.update(vo, userId);
        }
        return Resp.success(${objName}Id);
    }

    /**
     * 获取详情
     *
     * @param id 参数
     * @return cc.wdcloud.base.Resp<${domainPackage}.${domainName}> 详情信息
     * @author ${author}
     * @createdAt ${createDate}
     * @updatedAt ${createDate}
     */
    @Deprecated
    @ApiOperation(value = "主键查询")
    @RequestMapping(value = "/findById", method = RequestMethod.GET)
    public Resp<${domainName}> findById(@RequestParam("id") Long id) {
        Preconditions.checkArgument(id != null, "ID不能为空");
        ${domainName} ${objName} = ${objName}Service.findById(id);
        return Resp.success(${objName});
    }

    /**
     * 删除，软删除，更新数据库删除标志
     *
     * @param id 参数
     * @return cc.wdcloud.base.Resp<java.lang.Boolean> 是否删除成功
     * @author ${author}
     * @createdAt ${createDate}
     * @updatedAt ${createDate}
     */
    @ApiOperation(value = "删除")
    @RequestMapping(value = "/delete", method = RequestMethod.GET)
    public Resp<Boolean> delete(@RequestParam("id") Long id) {
        Preconditions.checkArgument(id != null, "ID不能为空");
        ${domainName} ${objName} = new ${domainName}();
        ${objName}.setId(id);
        ${objName}.setIsDel(DelEnum.NO.getCode());
        int count = ${objName}Service.updateById(${objName});
        return Resp.success(count == 1);
    }
}

